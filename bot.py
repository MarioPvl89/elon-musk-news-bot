import os
import asyncio
import requests
import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, CallbackContext

# –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
TOKEN = "7924106666:AAGd-HK2cfXRkNmLtrXVrV1j80HuPpAfSAk"

# API-–∫–ª—é—á –¥–ª—è NewsAPI
API_KEY = "0d8117b87d1949f9808c47112650cfab"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π
def get_news():
    URL = f"https://newsapi.org/v2/everything?q=Elon+Musk&language=en&sortBy=publishedAt&apiKey={API_KEY}"
    response = requests.get(URL)

    if response.status_code == 200:
        data = response.json()
        articles = data.get("articles", [])

        news_list = []
        for article in articles[:5]:  # –ë–µ—Ä—ë–º 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
            title = article["title"]
            link = article["url"]
            news_list.append(f"üîπ {title}\n{link}")

        return "\n\n".join(news_list) if news_list else "–ù–æ–≤–æ—Å—Ç–µ–π –Ω–µ—Ç."
    else:
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π."

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /news
async def news_command(update: Update, context: CallbackContext) -> None:
    news = get_news()
    await update.message.reply_text(news)

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞
app = Application.builder().token(TOKEN).build()

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: CallbackContext):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π –ø—Ä–æ –ò–ª–æ–Ω–∞ –ú–∞—Å–∫–∞.")

# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
app.add_handler(CommandHandler("start", start))

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook
async def start_webhook():
    await app.bot.set_webhook(f"https://elon-musk-news-bot.onrender.com/webhook/7924106666:AAGd-HK2cfXRkNmLtrXVrV1j80HuPpAfSAk/")

PORT = int(os.environ.get("PORT", 8443))  # –ï—Å–ª–∏ PORT –Ω–µ –∑–∞–¥–∞–Ω, –±–µ—Ä—ë–º 8443 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ webhook
async def main():
    await app.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        webhook_url=f"{WEBHOOK_URL}{TOKEN}"
    )

if __name__ == "__main__":
    try:
        asyncio.get_running_loop()
    except RuntimeError:
        asyncio.run(main())
    else:
        asyncio.create_task(main())
